{"Name":"Google Maps for iOS","Id":3073,"Alias":"googleiosmaps","Description":"With the Google Maps SDK for iOS, you can add maps based on Google maps data to your application.  The SDK automatically handles access to the Google Maps servers, map display, and response to user gestures such as clicks and drags. You can also add markers, polylines, ground overlays and info windows to your map.  These objects provide additional information for map locations, and allow user interaction with the map.\n\nShowing a Map\n=============\n\n### AppDelegate\n\n```csharp\nusing Google.Maps;\n...\n\nconst string MapsApiKey = \"\u003cGet your ID at https://code.google.com/apis/console/\u003e\";\n\npublic override bool FinishedLaunching (UIApplication app, NSDictionary options)\n{\n\tMapServices.ProvideAPIKey (MapsApiKey);\n\t...\n}\n```\n\n### Your View Controller\n\n```csharp\nusing Google.Maps;\n...\n\nMapView mapView;\n\npublic override void LoadView ()\n{\n\tbase.LoadView ();\n\t\n\tCameraPosition camera = CameraPosition.FromCamera (latitude: 37.797865, \n\t\t\t                                           longitude: -122.402526, \n\t\t\t                                           zoom: 6);\n\tmapView = MapView.FromCamera (CGRect.Empty, camera);\n\tmapView.MyLocationEnabled = true;\n\n\tView = mapView;\n}\n\npublic override void ViewWillAppear (bool animated)\n{\n\tbase.ViewWillAppear (animated);\n\tmapView.StartRendering ();\n}\n\npublic override void ViewWillDisappear (bool animated)\n{\t\n\tmapView.StopRendering ();\n\tbase.ViewWillDisappear (animated);\n}\n```\n\nAttribution Requirements\n========================\n\nIf you use the Google Maps SDK for iOS in your application, you must include the attribution text as part of a legal notices section in your application. Including legal notices as an independent menu item, or as part of an \"About\" menu item, is recommended.\n\nYou can get the attribution text by making a call to `Google.Maps.MapServices.OpenSourceLicenseInfo`\n \n*Screenshots assembled with [PlaceIt](http://placeit.breezi.com/).*\n","Version":"2.1.0.0","Summary":"Add custom markers, styled maps, 3D buildings, indoor floor plans, street view, satellite imagery, and more to your iOS app.","QuickStart":"Showing a Map\n=============\n\n### AppDelegate\n\n```csharp\nusing Google.Maps;\n...\n\nconst string MapsApiKey = \"\u003cGet your ID at https://code.google.com/apis/console/\u003e\";\n\npublic override bool FinishedLaunching (UIApplication app, NSDictionary options)\n{\n\tMapServices.ProvideAPIKey (MapsApiKey);\n\t...\n}\n```\n\n### Your View Controller\n\n```csharp\nusing Google.Maps;\n...\n\nMapView mapView;\n\npublic override void LoadView ()\n{\n\tbase.LoadView ();\n\t\n\t// Create a GMSCameraPosition that tells the map to display the\n  \t// coordinate 37.79,-122.40 at zoom level 6.\n\tvar camera = CameraPosition.FromCamera (latitude: 37.79, \n\t\t\t                                longitude: -122.40, \n\t\t\t                                zoom: 6);\n\tmapView = MapView.FromCamera (CGRect.Empty, camera);\n\tmapView.MyLocationEnabled = true;\n\tView = mapView;\n}\n```\n\nAttribution Requirements\n========================\n\nIf you use the Google Maps SDK for iOS in your application, you must include the attribution text as part of a legal notices section in your application.  Including legal notices as an independent menu item, or as part of an \"About\" menu item, is recommended.\n\nYou can get the attribution text by making a call to `Google.Maps.MapServices.OpenSourceLicenseInfo`\n\nEnable the required APIs on the Google Developers Console\n===\n\nYou need to activate the Google Maps SDK for iOS, and optionally the Google Places API for iOS, in your project on the Google Developers Console.\n\nIf you want to be guided through the process and activate both the APIs automatically, click [this link][1].\n\nAlternatively, you can activate the APIs yourself in the Developers Console, by doing the following:\n\n- Go to the [Google Developers Console][2].\n- Select a project, or create a new one.\n- Enable the **Google Maps SDK for iOS**, and optionally the **Google Places API for iOS**: [Open the API Library][3] in the Google Developers Console. If prompted, select a project or create a new one. Select the **Enabled APIs** link in the API section to see a list of all your enabled APIs. Make sure that the API is on the list of enabled APIs. If you have not enabled it, select the API from the list of APIs, then select the **Enable API** button for the API.\n \nThe Google Maps API Key\n=======================\n\nUsing an API key enables you to monitor your application\u0027s Maps API usage, and ensures that Google can contact you about your application if necessary. The key is free, you can use it with any of your applications that call the Maps API, and it supports an unlimited number of users. You obtain a Maps API key from the Google APIs Console by providing your application\u0027s bundle identifier. Once you have the key, you add it to your AppDelegate as described in the next section.\n\n### Obtaining an API Key\n\nYou can obtain a key for your app in the [Google APIs Console](https://code.google.com/apis/console/).\n\n1. Click on \"Use Google APIs\" blue card.\n2. In the sidebar on the left, select Credentials.\n3. If your project doesn\u0027t already have an iOS API key, create one now by selecting **Add credentials** \u003e **API key** \u003e **iOS key**.\n4. In the resulting dialog, enter your app\u0027s bundle identifier, such as `com.example.myapp`.\n5. Click **Create**.  Your new iOS API key appears in the list of API keys for your project.\n6. Add your API key to your `AppDelegate` class as follows:\n\n```csharp\nusing Google.Maps;\n...\n\n[Register (\"AppDelegate\")]\npublic partial class AppDelegate : UIApplicationDelegate\n{\n\tconst string MapsApiKey = \"\u003cGet your ID at https://code.google.com/apis/console/\u003e\";\n\t\n\tpublic override bool FinishedLaunching (UIApplication app, NSDictionary options)\n\t{\n\t\tMapServices.ProvideAPIKey (MapsApiKey);\n\t\t...\n\t}\n}\n```\n\nDeclare the URL schemes used by the API\n===\n\nWith iOS 9, apps must declare the URL schemes that they intend to open, by specifying the schemes in the app\u0027s Info.plist file. The Google Maps SDK for iOS opens the Google Maps mobile app when the user clicks the Google logo on the map, and your app therefore needs to declare the relevant URL schemes.\n\nTo declare the URL schemes used by the Google Maps SDK for iOS, add the following lines to your Info.plist:\n\n```xml\n\u003ckey\u003eLSApplicationQueriesSchemes\u003c/key\u003e\n\u003carray\u003e\n    \u003cstring\u003egooglechromes\u003c/string\u003e\n    \u003cstring\u003ecomgooglemaps\u003c/string\u003e\n\u003c/array\u003e\n```\n\n[1]: https://console.developers.google.com/flows/enableapi?apiid=placesios,maps_ios_backend\u0026keyType=CLIENT_SIDE_IOS\n[2]: https://console.developers.google.com/\n[3]: https://console.developers.google.com/project/_/apiui/apis/library","Hash":"f8243cb7a01956ced79b5673fc8cc89b","TargetPlatforms":["ios","ios-unified"],"TrialHash":null}